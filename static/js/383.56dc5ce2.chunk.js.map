{"version":3,"file":"static/js/383.56dc5ce2.chunk.js","mappings":"mOA+GA,EAnGwB,SAAC,GAWlB,IAVLA,EAUI,EAVJA,eACAC,EASI,EATJA,iBACAC,EAQI,EARJA,eACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,GAAwDC,EAAAA,EAAAA,WAAS,GAAjE,eAAOC,EAAP,KAA6BC,EAA7B,KAEA,OACE,SAAC,KAAD,WACE,UAACC,EAAA,GAAD,CAAOC,IAAI,KAAX,UACGC,QAAQC,IAAI,SAAUT,IACvB,gBAAKU,UAAU,OAAf,UACE,4CAEF,SAAC,KAAD,KACA,iBAAKA,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,MAAM,QACND,UAAU,qCACVE,QAAS,kBAAMP,GAAyBD,IAH1C,UAKE,SAAC,KAAD,CAAgBS,OAAK,EAACF,MAAM,YAAYG,KAAK,UAE/C,UAAC,KAAD,CACEC,OAAQX,EACRM,UAAU,aACVM,GAAG,iBAHL,WAKE,gBAAKN,UAAU,iCAAf,UACE,UAAC,KAAD,CAAsBA,UAAU,oCAAhC,WACE,UAAC,KAAD,CAAgBG,OAAK,EAACF,MAAM,UAAUG,KAAK,KAA3C,4BACkBd,MAElB,UAAC,KAAD,CAAciB,KAAG,EAAjB,WACE,SAAC,KAAD,CACEL,QAAS,WACPX,EAAU,OACVC,GAAY,GACZH,GAAU,EAAM,QAJpB,wBASA,SAAC,KAAD,CACEa,QAAS,WACPX,EAAU,QACVC,GAAY,GACZH,GAAU,EAAM,SAJpB,yBASA,SAAC,KAAD,CACEa,QAAS,WACPX,EAAU,OACVC,GAAY,GACZH,GAAU,EAAO,QAJrB,kCAYN,iBAAKW,UAAU,sBAAf,WACE,iBAAMA,UAAU,6BAAhB,mBAAiDd,EAAjD,YAA+DC,EAA/D,eAA8EF,EAA9E,QACA,UAAC,KAAD,CAAsBe,UAAU,iBAAhC,WACE,SAAC,KAAD,CAAgBG,OAAK,EAACF,MAAM,eAAeG,KAAK,KAAhD,SACGpB,KAEH,SAAC,KAAD,CAAcuB,KAAG,EAAjB,SACGnB,EAAUoB,KAAI,SAACJ,EAAMK,GACpB,OACE,SAAC,KAAD,CAEEP,QAAS,kBAAMnB,EAAeqB,IAFhC,SAIGA,GAHIK,qBAYrB,SAAC,KAAD,CAAWT,UAAU,eCJ7B,EAjGmB,SAAC,GAOb,IAAD,IANJU,UAAAA,OAMI,MANQ,EAMR,MALJC,YAAAA,OAKI,MALU,EAKV,MAJJC,YAAAA,OAII,MAJU,EAIV,MAHJC,aAAAA,OAGI,aAFJC,cAAAA,OAEI,SADJC,EACI,EADJA,aAEIC,EAAa,EACbC,EAAWL,EAEXA,EAAcF,GAChBM,EAAa,EACbC,EAAWP,GACFC,GAAeO,SAASN,EAAc,EAAG,KAClDI,EAAa,EACbC,EAAWL,GACFD,EAAcO,SAASN,EAAc,EAAG,KAAOF,GACxDM,EAAaL,EAAcO,SAASN,EAAc,EAAG,IACrDK,EAAWN,EAAcO,SAASN,EAAc,EAAG,MAEnDI,EAAaN,GAAaE,EAAc,GACxCK,EAAWP,GAIb,IADA,IAAMS,EAAS,GACNC,EAFTJ,EAA4B,IAAfA,EAAmB,EAAIA,EAEXI,GAAKH,EAAUG,GAAK,EAC3CD,EAAOE,KAAKD,GAGd,IAAME,EAA2BX,GAAe,EAAI,WAAa,GAC3DY,EAA0BZ,GAAeD,EAAY,WAAa,GAClEc,EAA0Bb,GAAe,EAAI,WAAa,GAC1Dc,EAA0Bd,GAAeD,EAAY,WAAa,GACxE,OAAOA,EAAY,GACjB,SAACd,EAAA,GAAD,CAAOC,IAAI,KAAKG,UAAU,4BAA1B,UACE,UAAC,KAAD,CAAKA,UAAU,oCAAf,UACGc,IACC,SAAC,KAAD,CAASd,UAAS,oBAAesB,GAAjC,UACE,UAAC,KAAD,CACEtB,UAAU,4BACVE,QAAS,kBAAMa,EAAa,IAF9B,WAIE,iBAAMf,UAAU,gBAChB,iBAAMA,UAAU,qBAItB,SAAC,KAAD,CAASA,UAAS,oBAAewB,GAAjC,UACE,SAAC,KAAD,CACExB,UAAU,2BACVE,QAAS,kBAAMa,EAAaJ,EAAc,IAF5C,UAIE,iBAAMX,UAAU,mBAGnBmB,EAAOX,KAAI,SAACY,GACX,OACE,SAAC,KAAD,CAEEpB,UAAS,oBAAeW,IAAgBS,GAAK,UAF/C,UAIE,SAAC,KAAD,CACEpB,UAAU,sBACVE,QAAS,kBAAMa,EAAaK,IAF9B,SAIGA,KAPEA,OAYX,SAAC,KAAD,CAASpB,UAAS,oBAAeyB,GAAjC,UACE,SAAC,KAAD,CACEzB,UAAU,2BACVE,QAAS,kBAAMa,EAAaJ,EAAc,IAF5C,UAIE,iBAAMX,UAAU,oBAGnBa,IACC,SAAC,KAAD,CAASb,UAAS,oBAAeuB,GAAjC,UACE,UAAC,KAAD,CACEvB,UAAU,2BACVE,QAAS,kBAAMa,EAAaL,IAF9B,WAIE,iBAAMV,UAAU,iBAChB,iBAAMA,UAAU,2BAO1B,SAACJ,EAAA,GAAD,CAAOC,IAAI,KAAKG,UAAU,UC7FxB0B,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACE,SAAC/B,EAAA,GAAD,CAAOgC,KAAG,EAACC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI/B,UAAU,QAA1C,UACE,SAAC,KAAD,CAAMA,UAAU,eAAhB,UACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,iBAAKA,UAAU,YAAf,WACE,SAAC,KAAD,CAAKA,UAAU,yBAAf,UACE,SAACJ,EAAA,GAAD,CAAOkC,GAAI,EAAGE,GAAI,EAAGH,GAAI,EAAGI,GAAI,EAAGpC,IAAK,EAAxC,UACE,gBAAKqC,IAAKP,EAAQQ,KAAMC,IAAKT,EAAQU,MAAOC,MAAO,cAGvD,SAAC,KAAD,CACErC,MAAM,UACNsC,MAAI,EACJvC,UAAU,mCAHZ,SAKG2B,EAAQa,SAEX,iBAAKxC,UAAU,uBAAf,WACE,UAAC,KAAD,6BAA8B2B,EAAQQ,SACtC,UAAC,KAAD,CAAUnC,UAAU,+CAApB,oBACU2B,EAAQc,MAAO,KACvB,iBAAMzC,UAAU,eAAhB,oBAEF,SAAC,KAAD,CAAUA,UAAU,kDAApB,UACE,kBAAMA,UAAU,aAAhB,cAA+B2B,EAAQlB,MAAQ,oBAxBNkB,EAAQrB,KAmCnE,EAAeoC,EAAAA,KAAWhB,GCpCpBiB,EAAkB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOjC,EAA2C,EAA3CA,YAAaD,EAA8B,EAA9BA,UAAWK,EAAmB,EAAnBA,aACxD,OACE,UAAC,KAAD,WACG6B,EAAMpC,KAAI,SAACmB,GACV,OAAO,SAAC,EAAD,CAA2BA,QAASA,GAArBA,EAAQrB,QAEhC,SAAC,EAAD,CACEK,YAAaA,EACbD,UAAWA,EACXK,aAAc,SAACK,GAAD,OAAOL,EAAaK,UAM1C,EAAesB,EAAAA,KAAWC,G,yk0aCdpBvD,EAAY,CAAC,EAAG,EAAG,GAAI,IAoI7B,EAlImB,SAAC,GAAe,IAAbyD,EAAY,EAAZA,MACd5D,EAAiB6D,EAAAA,OACvB,GAA8BrD,EAAAA,EAAAA,WAAS,GAAvC,eAAOsD,EAAP,KAAgBC,EAAhB,KACA,GAAsCvD,EAAAA,EAAAA,UAAS,GAA/C,eAAOkB,EAAP,KAAoBsC,EAApB,KACA,GAAgDxD,EAAAA,EAAAA,UAASL,EAAU,IAAnE,eAAOJ,EAAP,KAAyBkE,EAAzB,KACA,GAAkCzD,EAAAA,EAAAA,UAAS,GAA3C,eAAOiB,EAAP,KAAkByC,EAAlB,KACA,GAA0B1D,EAAAA,EAAAA,UAAS,IAAnC,eAAOmD,EAAP,KAAcQ,EAAd,KACA,GAAoC3D,EAAAA,EAAAA,UAASqD,GAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAA4B7D,EAAAA,EAAAA,UAAS,OAArC,eAAOH,EAAP,KAAeC,EAAf,KACA,GAAgCE,EAAAA,EAAAA,WAAS,GAAzC,eAAO8D,EAAP,KAAiB/D,EAAjB,KATgC,SAmBjBH,IAnBiB,uEAmBhC,sGACEmE,EADF,gCAEEC,EAFF,+BAEQ,MACNC,EAHF,+BAGc1E,EACZ2E,EAJF,+BAIgBhD,EAEdb,QAAQC,IAAI,OAAQyD,GACpBR,GAAW,GACXxD,EAAYgE,GACZN,EAAoBQ,GACpBT,EAAeU,GACfC,YAAW,WACT,IAAIC,EAAS,GAEXA,EADEL,EACOM,EAAUL,EAAKC,GAGbK,EAAYJ,EAAaD,EADhCF,EAC2CH,EAEAP,GAGjDM,EAASS,GACTV,EAAaL,EAAAA,OAAcY,GAC3BV,GAAW,KACV,KAzBL,4CAnBgC,yBAWhCgB,EAAAA,EAAAA,YAAU,WACRf,EAAe,KACd,CAACjE,KAEJgF,EAAAA,EAAAA,YAAU,WACR3E,EAAUkE,EAAUjE,EAAQN,EAAkB2B,KAC7C,IA8BH,IAAMmD,EAAY,SAACL,EAAKC,GACtB,IAAIG,EAAS,GAwBb,OAvBAf,EAAAA,KAAS,SAACmB,GAAD,OACPJ,EAAOxC,KAAK,CACVZ,MAAOwD,EAAKxD,MACZH,GAAI2D,EAAK3D,GACT6B,KAAM8B,EAAKC,aACX1B,MAAOyB,EAAKE,WACZ1B,MAAOwB,EAAKG,WACZ/B,MAAO4B,EAAKI,cAGhBR,EAAOL,MAAK,SAACc,EAAGC,GACd,MAAY,QAARd,GACFlE,EAAU,OACH+E,EAAE7B,MAAQ8B,EAAE9B,QAEnBlD,EAAU,QACHgF,EAAE9B,MAAQ6B,EAAE7B,UAGvBa,EAAcO,GACdA,EAASA,EAAOW,MAAM,EAAGd,GACzBlE,GAAY,GACZM,QAAQC,IAAI,eAAgB8D,GACrBA,GAGHE,EAAc,SAACJ,EAAaD,EAAWe,GAC3C,IACIC,GAAgBf,EAAc,GAAKD,EACnCiB,EAFUF,EAESD,MAAME,EAAcA,EAAehB,GACtDG,EAAS,GAWb,OAVAc,EAASnE,KAAI,SAACyD,GAAD,OACXJ,EAAOxC,KAAK,CACVZ,MAAOwD,EAAKxD,MACZH,GAAI2D,EAAK3D,GACT6B,KAAM8B,EAAKC,cAAgBD,EAAK9B,KAChCK,MAAOyB,EAAKE,YAAcF,EAAKzB,MAC/BC,MAAOwB,EAAKG,YAAcH,EAAKxB,MAC/BJ,MAAO4B,EAAKI,UAAYJ,EAAK5B,WAG1BwB,GAGH3E,GAAcyB,EAAc,GAAK3B,EACjCG,EAAWwB,EAAc3B,EAE/B,OACE,iBAAKgB,UAAU,yBAAf,WACE,SAAC4E,EAAD,CACEvF,UAAW,SAACmE,EAAMC,GAAP,OAAepE,EAAUmE,EAAMC,EAAKzE,EAAkB,IACjE6F,QAAQ,kBACR9F,eAAgBmE,EAChBlE,iBAAkBA,EAClBC,eAAgBA,EAChB4D,MAAOA,EACP3D,WAAYA,EACZC,SAAUA,EACV2F,YAAalC,EAAQA,EAAMmC,OAAS,EACpC3F,UAAWA,EACXE,OAAQA,EACRC,UAAW,SAACyF,GAAD,OAAgBzF,EAAUyF,IACrCxF,YAAa,SAACyF,GAAD,OAAezF,EAAYyF,MAEzClC,GACC,SAACmC,EAAA,EAAD,CAASC,MAAM,0BAEf,SAACC,EAAD,CACExC,MAAOA,EACPjC,YAAaA,EACbD,UAAWA,EACXK,aAAc,SAACsE,GACbvF,QAAQC,IAAI,OAAQsF,GACpBhG,EAAUkE,EAAUjE,EAAQN,EAAkBqG","sources":["components/shared/ProductHeading.js","components/shared/Pagination.js","components/shared/DataCards.js","components/shared/ProductListing.js","components/pages/product-list-static/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n} from \"reactstrap\";\r\nimport { Colxx, Separator } from \"components/common/Colxx\";\r\n\r\nconst ListPageHeading = ({\r\n  changePageSize,\r\n  selectedPageSize,\r\n  totalItemCount,\r\n  startIndex,\r\n  endIndex,\r\n  pageSizes,\r\n  fetchData,\r\n  sorted,\r\n  setSorted,\r\n  setSortMode,\r\n}) => {\r\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\r\n\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        {console.log(\"sorted\", sorted)}\r\n        <div className=\"mb-2\">\r\n          <h3>Product List</h3>\r\n        </div>\r\n        <Separator />\r\n        <div className=\"mb-2\">\r\n          <Button\r\n            color=\"empty\"\r\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\r\n          >\r\n            <DropdownToggle caret color=\"secondary\" size=\"xs\"></DropdownToggle>\r\n          </Button>\r\n          <Collapse\r\n            isOpen={displayOptionsIsOpen}\r\n            className=\"d-md-block\"\r\n            id=\"displayOptions\"\r\n          >\r\n            <div className=\"d-block d-md-inline-block pt-1\">\r\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                <DropdownToggle caret color=\"primary\" size=\"xs\">\r\n                  Sort By Price: {sorted}\r\n                </DropdownToggle>\r\n                <DropdownMenu end>\r\n                  <DropdownItem\r\n                    onClick={() => {\r\n                      setSorted(\"Asc\");\r\n                      setSortMode(true);\r\n                      fetchData(true, \"Asc\");\r\n                    }}\r\n                  >\r\n                    Ascending\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => {\r\n                      setSorted(\"Desc\");\r\n                      setSortMode(true);\r\n                      fetchData(true, \"Desc\");\r\n                    }}\r\n                  >\r\n                    Descending\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    onClick={() => {\r\n                      setSorted(\"All\");\r\n                      setSortMode(false);\r\n                      fetchData(false, \"All\");\r\n                    }}\r\n                  >\r\n                    All Results\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n            <div className=\"float-md-right pt-1\">\r\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedPageSize}\r\n                </DropdownToggle>\r\n                <DropdownMenu end>\r\n                  {pageSizes.map((size, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changePageSize(size)}\r\n                      >\r\n                        {size}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <Separator className=\"mb-5\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ListPageHeading;\r\n","import React from \"react\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { Colxx } from \"components/common/Colxx\";\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n  const lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n  const prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n  const nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3 cursor--pointer\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <span className=\"arrow left\" />\r\n              <span className=\"arrow left\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <span className=\"arrow left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && \"active\"}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <span className=\"arrow right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <span className=\"arrow right\" />\r\n              <span className=\"arrow right\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { Row, Card, CardBody, CardSubtitle, CardText, Badge } from \"reactstrap\";\r\nimport { Colxx } from \"components/common/Colxx\";\r\n\r\nconst DataCards = ({ product }) => {\r\n  return (\r\n    <Colxx cla sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3 \" key={product.id}>\r\n      <Card className=\"card--shadow\">\r\n        <CardBody>\r\n          <Row>\r\n            <div className=\"img--card\">\r\n              <Row className=\"justify-content-center\">\r\n                <Colxx lg={8} md={6} sm={6} xs={6} xxs={8}>\r\n                  <img alt={product.name} src={product.image} width={\"100%\"} />\r\n                </Colxx>\r\n              </Row>\r\n              <Badge\r\n                color=\"primary\"\r\n                pill\r\n                className=\"position-absolute badge-top-left\"\r\n              >\r\n                {product.brand}\r\n              </Badge>\r\n              <div className=\"img--card__container\">\r\n                <CardSubtitle> Product Name: {product.name}</CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  Price: {product.price}{\" \"}\r\n                  <span className=\"price--color\"> $</span>\r\n                </CardText>\r\n                <CardText className=\"text-muted fw text-small mb-0 font-weight-light\">\r\n                  <span className=\"text--gold\">#{product.index + 1}</span>\r\n                </CardText>\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default React.memo(DataCards);\r\n","import React from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport Pagination from \"components/shared/Pagination\";\r\nimport DataCard from \"components/shared/DataCards\";\r\n\r\nconst ListPageListing = ({ items, currentPage, totalPage, onChangePage }) => {\r\n  return (\r\n    <Row>\r\n      {items.map((product) => {\r\n        return <DataCard key={product.id} product={product} />;\r\n      })}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => onChangePage(i)}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListPageListing);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProductHeading from \"components/shared/ProductHeading\";\r\nimport ProductListing from \"components/shared/ProductListing\";\r\nimport data from \"assets/data/productList.json\";\r\nimport Loading from \"components/common/Loading\";\r\n\r\nconst pageSizes = [4, 8, 12, 16];\r\n\r\nconst StaticView = ({ match }) => {\r\n  const totalItemCount = data.length;\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPageSize, setSelectedPageSize] = useState(pageSizes[0]);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [items, setItems] = useState([]);\r\n  const [sortedData, setSortedData] = useState(data);\r\n  const [sorted, setSorted] = useState(\"All\");\r\n  const [sortMode, setSortMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedPageSize]);\r\n\r\n  useEffect(() => {\r\n    fetchData(sortMode, sorted, selectedPageSize, currentPage);\r\n  }, []);\r\n\r\n  async function fetchData(\r\n    sort = false,\r\n    asc = \"All\",\r\n    _pageSize = selectedPageSize,\r\n    _pageNumber = currentPage\r\n  ) {\r\n    console.log(\"sort\", sort);\r\n    setLoading(true);\r\n    setSortMode(sort);\r\n    setSelectedPageSize(_pageSize);\r\n    setCurrentPage(_pageNumber);\r\n    setTimeout(() => {\r\n      let _items = [];\r\n      if (sort) {\r\n        _items = sortItems(asc, _pageSize);\r\n      } else {\r\n        if (sort) {\r\n          _items = createItems(_pageNumber, _pageSize, sortedData);\r\n        } else {\r\n          _items = createItems(_pageNumber, _pageSize, data);\r\n        }\r\n      }\r\n      setItems(_items);\r\n      setTotalPage(data.length / _pageSize);\r\n      setLoading(false);\r\n    }, 1000);\r\n  }\r\n\r\n  const sortItems = (asc, _pageSize) => {\r\n    let _items = [];\r\n    data.map((item) =>\r\n      _items.push({\r\n        index: item.index,\r\n        id: item.id,\r\n        name: item.product_name,\r\n        brand: item.brand_name,\r\n        price: item.base_price,\r\n        image: item.filename,\r\n      })\r\n    );\r\n    _items.sort((a, b) => {\r\n      if (asc === \"Asc\") {\r\n        setSorted(\"Asc\");\r\n        return a.price - b.price;\r\n      } else {\r\n        setSorted(\"Desc\");\r\n        return b.price - a.price;\r\n      }\r\n    });\r\n    setSortedData(_items);\r\n    _items = _items.slice(0, _pageSize);\r\n    setSortMode(false);\r\n    console.log(\"sorted items\", _items);\r\n    return _items;\r\n  };\r\n\r\n  const createItems = (_pageNumber, _pageSize, _sortedData) => {\r\n    let allData = _sortedData;\r\n    let currentIndex = (_pageNumber - 1) * _pageSize;\r\n    let pageData = allData.slice(currentIndex, currentIndex + _pageSize);\r\n    let _items = [];\r\n    pageData.map((item) =>\r\n      _items.push({\r\n        index: item.index,\r\n        id: item.id,\r\n        name: item.product_name || item.name,\r\n        brand: item.brand_name || item.brand,\r\n        price: item.base_price || item.price,\r\n        image: item.filename || item.image,\r\n      })\r\n    );\r\n    return _items;\r\n  };\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n\r\n  return (\r\n    <div className=\"disable-text-selection\">\r\n      <ProductHeading\r\n        fetchData={(sort, asc) => fetchData(sort, asc, selectedPageSize, 1)}\r\n        heading=\"menu.image-list\"\r\n        changePageSize={setSelectedPageSize}\r\n        selectedPageSize={selectedPageSize}\r\n        totalItemCount={totalItemCount}\r\n        match={match}\r\n        startIndex={startIndex}\r\n        endIndex={endIndex}\r\n        itemsLength={items ? items.length : 0}\r\n        pageSizes={pageSizes}\r\n        sorted={sorted}\r\n        setSorted={(sortStatus) => setSorted(sortStatus)}\r\n        setSortMode={(_sortMode) => setSortMode(_sortMode)}\r\n      />\r\n      {loading ? (\r\n        <Loading label=\"Loading Product List\" />\r\n      ) : (\r\n        <ProductListing\r\n          items={items}\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={(page) => {\r\n            console.log(\"page\", page);\r\n            fetchData(sortMode, sorted, selectedPageSize, page);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaticView;\r\n"],"names":["changePageSize","selectedPageSize","totalItemCount","startIndex","endIndex","pageSizes","fetchData","sorted","setSorted","setSortMode","useState","displayOptionsIsOpen","setDisplayOptionsIsOpen","Colxx","xxs","console","log","className","color","onClick","caret","size","isOpen","id","end","map","index","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","DataCards","product","cla","sm","lg","xl","md","xs","alt","name","src","image","width","pill","brand","price","React","ListPageListing","items","match","data","loading","setLoading","setCurrentPage","setSelectedPageSize","setTotalPage","setItems","sortedData","setSortedData","sortMode","sort","asc","_pageSize","_pageNumber","setTimeout","_items","sortItems","createItems","useEffect","item","product_name","brand_name","base_price","filename","a","b","slice","_sortedData","currentIndex","pageData","ProductHeading","heading","itemsLength","length","sortStatus","_sortMode","Loading","label","ProductListing","page"],"sourceRoot":""}